name: 🚀 Release Package

on:
    workflow_call:
        inputs:
            name:
                description: The name of package
                required: true
                type: string
            version-type:
                description: Specifies the version type such as major, minor, or patch for the build
                required: true
                type: string
            dotnet-project:
                description: Path to the .NET project to build and package such as "src/Core"
                required: false
                type: string
                default: ""
            global-json-file:
                description: The relative path to the global.json file to extract .NET version
                required: false
                type: string
                default: ""
            directory-build-props:
                description: The relative path to the Directory.Build.props file to set version
                required: false
                type: string
                default: ""
            godot-addon:
                description: Path to the Godot addon to package such as "addons/plugin"
                required: false
                type: string
                default: ""
            godot-preset-name:
                description: The Godot export preset name to use for the build
                required: false
                type: string
                default: "Default"
            unity-package:
                description: Path to the Unity package to package such as "Packages/com.example.package"
                required: false
                type: string
                default: ""
            publish-github:
                description: If true, publish release to GitHub
                required: false
                type: boolean
                default: false
            publish-nuget:
                description: If true, publish packages to NuGet
                required: false
                type: boolean
                default: false
            publish-discord:
                description: If true, send Discord notifications
                required: false
                type: boolean
                default: false

        secrets:
            github-token:
                description: The GitHub token for authentication
                required: true
            nuget-api-key:
                description: NuGet API key used for authenticating and publishing the package
                required: false
            discord-webhook:
                description: Discord webhook URL for sending notifications
                required: false

jobs:
    prepare:
        name: Prepare Release
        runs-on: ubuntu-latest
        outputs:
            version: ${{ steps.bump-version.outputs.next-version }}
            changelog-plain: ${{ steps.generate-changelog.outputs.changelog-plain }}
            changelog-markdown: ${{ steps.generate-changelog.outputs.changelog-markdown }}
            filename: ${{ steps.generate-filename.outputs.filename }}

        steps:
            - name: 📂 Checkout Code
              uses: actions/checkout@v5
              with:
                  fetch-depth: 0

            - name: 🆙 Bump Version
              id: bump-version
              uses: grovegs/actions/.github/actions/bump-version@v1.0.1
              with:
                  version-type: ${{ inputs.version-type }}

            - name: 📝 Generate Changelog
              id: generate-changelog
              uses: grovegs/actions/.github/actions/generate-changelog@v1.0.1
              with:
                  next-version: ${{ steps.bump-version.outputs.next-version }}

            - name: 📦 Generate Filename
              id: generate-filename
              shell: bash
              run: |
                  #!/usr/bin/env bash
                  set -euo pipefail

                  filename=$(echo "${{ inputs.name }}" | sed -E 's/([[:space:]]|_)/-/g; s/([a-z])([A-Z])/\1-\2/g' | tr '[:upper:]' '[:lower:]')
                  filename="${filename}-${{ steps.bump-version.outputs.next-version }}"
                  echo "filename=${filename}" >> "${GITHUB_OUTPUT}"

    build-dotnet:
        name: Build .NET Package
        if: inputs.dotnet-project != ''
        needs: prepare
        runs-on: ubuntu-latest

        steps:
            - name: 📂 Checkout Code
              uses: actions/checkout@v5

            - name: 🔧 Setup .NET
              uses: grovegs/actions/.github/actions/setup-dotnet@v1.0.1
              with:
                  global-json-file: ${{ inputs.global-json-file }}
                  cache: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' }}

            - name: 🏗️ Build .NET Project
              uses: grovegs/actions/.github/actions/build-dotnet@v1.0.1
              with:
                  project: ${{ inputs.dotnet-project }}
                  configuration: Release
                  version: ${{ needs.prepare.outputs.version }}

            - name: 📦 Pack NuGet
              id: pack-nuget
              uses: grovegs/actions/.github/actions/pack-dotnet@v1.0.1
              with:
                  project: ${{ inputs.dotnet-project }}
                  configuration: Release
                  version: ${{ needs.prepare.outputs.version }}
                  name: ${{ needs.prepare.outputs.filename }}
                  directory-build-props: ${{ inputs.directory-build-props }}

            - name: 📤 Upload Package Artifact
              uses: grovegs/actions/.github/actions/upload-artifact@v1.0.1
              with:
                  name: ${{ needs.prepare.outputs.filename }}-dotnet
                  path: ${{ steps.pack-nuget.outputs.package }}
                  retention-days: 7

            - name: 📤 Upload Modified Files
              if: steps.pack-nuget.outputs.modified-files != ''
              uses: grovegs/actions/.github/actions/upload-artifact@v1.0.1
              with:
                  name: modified-dotnet
                  path: ${{ steps.pack-nuget.outputs.modified-files }}
                  retention-days: 1

    build-godot:
        name: Build Godot Addon
        if: inputs.godot-addon != ''
        needs: prepare
        runs-on: macos-latest

        steps:
            - name: 📂 Checkout Code
              uses: actions/checkout@v5

            - name: 📦 Pack Godot Addon
              id: pack-addon
              uses: grovegs/actions/.github/actions/pack-godot-addon@v1.0.1
              with:
                  addon: ${{ inputs.godot-addon }}
                  version: ${{ needs.prepare.outputs.version }}
                  filename: ${{ needs.prepare.outputs.filename }}

            - name: 📤 Upload Package Artifact
              uses: grovegs/actions/.github/actions/upload-artifact@v1.0.1
              with:
                  name: ${{ needs.prepare.outputs.filename }}-godot
                  path: ${{ steps.pack-addon.outputs.package }}
                  retention-days: 7

            - name: 📤 Upload Modified Files
              uses: grovegs/actions/.github/actions/upload-artifact@v1.0.1
              with:
                  name: modified-godot
                  path: ${{ steps.pack-addon.outputs.modified-files }}
                  retention-days: 1

    build-unity:
        name: Build Unity Package
        if: inputs.unity-package != ''
        needs: prepare
        runs-on: ubuntu-latest

        steps:
            - name: 📂 Checkout Code
              uses: actions/checkout@v5

            - name: 📦 Pack Unity Package
              id: pack-package
              uses: grovegs/actions/.github/actions/pack-unity-package@v1.0.1
              with:
                  package: ${{ inputs.unity-package }}
                  version: ${{ needs.prepare.outputs.version }}
                  filename: ${{ needs.prepare.outputs.filename }}

            - name: 📤 Upload Package Artifact
              uses: grovegs/actions/.github/actions/upload-artifact@v1.0.1
              with:
                  name: ${{ needs.prepare.outputs.filename }}-unity
                  path: ${{ steps.pack-package.outputs.package }}
                  retention-days: 7

            - name: 📤 Upload Modified Files
              uses: grovegs/actions/.github/actions/upload-artifact@v1.0.1
              with:
                  name: modified-unity
                  path: ${{ steps.pack-package.outputs.modified-files }}
                  retention-days: 1

    release:
        name: Release Package
        if: always() && needs.prepare.result == 'success' && (needs.build-dotnet.result == 'success' || needs.build-godot.result == 'success' || needs.build-unity.result == 'success')
        needs: [prepare, build-dotnet, build-godot, build-unity]
        runs-on: ubuntu-latest

        steps:
            - name: 📂 Checkout Code
              uses: actions/checkout@v5

            - name: 📥 Download Modified Files
              uses: grovegs/actions/.github/actions/download-artifact@v1.0.1
              continue-on-error: true
              with:
                  pattern: modified-*

            - name: 💾 Commit Version Changes and Create Tag
              id: commit-and-tag
              shell: bash
              run: |
                  #!/usr/bin/env bash
                  set -euo pipefail

                  git config user.name "github-actions[bot]"
                  git config user.email "github-actions[bot]@users.noreply.github.com"
                  git add .

                  if git diff --cached --quiet; then
                      echo "has_changes=false" >> "${GITHUB_OUTPUT}"
                  else
                      git commit -m "chore: release version ${{ needs.prepare.outputs.version }} [skip ci]"
                      git push origin HEAD:"${{ github.ref_name }}"
                      echo "has_changes=true" >> "${GITHUB_OUTPUT}"
                  fi

                  tag="v${{ needs.prepare.outputs.version }}"

                  if git rev-parse "${tag}" >/dev/null 2>&1; then
                      echo "Tag ${tag} already exists, skipping creation"
                  else
                      git tag -a "${tag}" -m "Release ${tag}"
                      git push origin "${tag}"
                      echo "Created and pushed tag ${tag}"
                  fi

            - name: 📥 Download .NET Package
              if: needs.build-dotnet.result == 'success'
              continue-on-error: true
              uses: grovegs/actions/.github/actions/download-artifact@v1.0.1
              with:
                  name: ${{ needs.prepare.outputs.filename }}-dotnet
                  path: packages/dotnet

            - name: 📥 Download Godot Package
              if: needs.build-godot.result == 'success'
              continue-on-error: true
              uses: grovegs/actions/.github/actions/download-artifact@v1.0.1
              with:
                  name: ${{ needs.prepare.outputs.filename }}-godot
                  path: packages/godot

            - name: 📥 Download Unity Package
              if: needs.build-unity.result == 'success'
              continue-on-error: true
              uses: grovegs/actions/.github/actions/download-artifact@v1.0.1
              with:
                  name: ${{ needs.prepare.outputs.filename }}-unity
                  path: packages/unity

            - name: 🔍 Find Package Files
              id: find-packages
              shell: bash
              run: |
                  #!/usr/bin/env bash
                  set -euo pipefail

                  all_packages=""
                  dotnet_package=""
                  godot_package=""
                  unity_package=""

                  if [ -d packages/dotnet ]; then
                    dotnet_package=$(find packages/dotnet -type f -name "*.nupkg" 2>/dev/null | head -n 1 || echo "")
                    [ -n "${dotnet_package}" ] && all_packages="${dotnet_package}"
                  fi

                  if [ -d packages/godot ]; then
                    godot_package=$(find packages/godot -type f \( -name "*.zip" -o -name "*.tgz" \) 2>/dev/null | head -n 1 || echo "")
                    [ -n "${godot_package}" ] && all_packages="${all_packages} ${godot_package}"
                  fi

                  if [ -d packages/unity ]; then
                    unity_package=$(find packages/unity -type f \( -name "*.zip" -o -name "*.tgz" \) 2>/dev/null | head -n 1 || echo "")
                    [ -n "${unity_package}" ] && all_packages="${all_packages} ${unity_package}"
                  fi

                  all_packages=$(echo "${all_packages}" | xargs)

                  echo "all-packages=${all_packages}" >> "${GITHUB_OUTPUT}"
                  echo "dotnet-package=${dotnet_package}" >> "${GITHUB_OUTPUT}"
                  echo "godot-package=${godot_package}" >> "${GITHUB_OUTPUT}"
                  echo "unity-package=${unity_package}" >> "${GITHUB_OUTPUT}"

                  echo "Found all packages: ${all_packages}"
                  echo "Found .NET package: ${dotnet_package}"
                  echo "Found Godot package: ${godot_package}"
                  echo "Found Unity package: ${unity_package}"

            - name: 🚀 Publish to GitHub
              if: inputs.publish-github && steps.find-packages.outputs.all-packages != ''
              uses: grovegs/actions/.github/actions/publish-github@v1.0.1
              with:
                  title: ${{ inputs.name }} ${{ needs.prepare.outputs.version }}
                  version: ${{ needs.prepare.outputs.version }}
                  changelog: ${{ needs.prepare.outputs.changelog-markdown }}
                  github-token: ${{ secrets.github-token }}
                  assets: ${{ steps.find-packages.outputs.all-packages }}

            - name: 📤 Publish to NuGet
              if: inputs.publish-nuget && steps.find-packages.outputs.dotnet-package != ''
              continue-on-error: true
              uses: grovegs/actions/.github/actions/publish-nuget@v1.0.1
              with:
                  file: ${{ steps.find-packages.outputs.dotnet-package }}
                  api-key: ${{ secrets.nuget-api-key }}

            - name: 📢 Notify Discord Success
              if: success() && inputs.publish-discord
              uses: grovegs/actions/.github/actions/notify-discord@v1.0.1
              with:
                  webhook-url: ${{ secrets.discord-webhook }}
                  title: ✅ ${{ github.event.repository.name }}
                  description: |
                      ${{ needs.prepare.outputs.changelog-markdown }}

                      [View Release](${{ github.server_url }}/${{ github.repository }}/releases/tag/v${{ needs.prepare.outputs.version }})
                  color: "3066993"

            - name: 📢 Notify Discord Failure
              if: failure() && inputs.publish-discord
              uses: grovegs/actions/.github/actions/notify-discord@v1.0.1
              with:
                  webhook-url: ${{ secrets.discord-webhook }}
                  title: ❌ ${{ github.event.repository.name }}
                  description: |
                      Release publication failed.

                      [View Workflow Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
                  color: "15158332"
