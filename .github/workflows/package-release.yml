name: 🚀 Release Package

on:
    workflow_call:
        inputs:
            name:
                description: The name of package.
                required: true
                type: string
            version-type:
                description: Specifies the version type (e.g., major, minor, patch) for the build.
                required: true
                type: string
            dotnet-projects:
                description: Array of .NET project paths to build and package (e.g., ["src/Core", "src/Godot"])
                required: false
                type: string
                default: "[]"
            godot-addons:
                description: Array of Godot addon paths to package (e.g., ["addons/plugin1", "addons/plugin2"])
                required: false
                type: string
                default: "[]"
            unity-packages:
                description: Array of Unity package paths to package (e.g., ["Packages/com.example.package1", "Packages/com.example.package2"])
                required: false
                type: string
                default: "[]"
            global-json-file:
                description: The relative path to the `global.json` file to extract .NET version.
                required: false
                type: string
                default: ""

        secrets:
            github-token:
                description: The GitHub token for authentication.
                required: true
            nuget-api-key:
                description: NuGet API key used for authenticating and publishing the package.
                required: false
            discord-webhook:
                description: Discord webhook URL for sending notifications.
                required: false

jobs:
    shared:
        runs-on: ubuntu-latest
        outputs:
            version: ${{ steps.bump_version.outputs.next-version }}
            changelog-plain: ${{ steps.generate_changelog.outputs.changelog-plain }}
            changelog-markdown: ${{ steps.generate_changelog.outputs.changelog-markdown }}
            filename: ${{ steps.generate_filename.outputs.filename }}

        steps:
            - name: 📂 Checkout Code
              uses: actions/checkout@v5
              with:
                  fetch-depth: 0

            - name: 🆙 Bump Version
              id: bump_version
              uses: grovegs/actions/.github/actions/bump-version@v0.1.2
              with:
                  version-type: ${{ inputs.version-type }}

            - name: 📝 Generate Changelog
              id: generate_changelog
              uses: grovegs/actions/.github/actions/generate-changelog@v0.1.2
              with:
                  next-version: ${{ steps.bump_version.outputs.next-version }}

            - name: 📦 Generate Filename
              id: generate_filename
              run: |
                  filename=$(echo "${{ inputs.name }}" | sed -E 's/([[:space:]]|_)/-/g; s/([a-z])([A-Z])/\1-\2/g' | tr '[:upper:]' '[:lower:]')-${{ steps.bump_version.outputs.next-version }}
                  echo "filename=$filename" >> $GITHUB_OUTPUT

    pack_dotnet_projects:
        if: fromJSON(inputs.dotnet-projects)[0] != null
        needs: shared
        runs-on: ubuntu-latest
        strategy:
            matrix:
                project: ${{ fromJSON(inputs.dotnet-projects) }}

        steps:
            - name: 📂 Checkout Code
              uses: actions/checkout@v5

            - name: ⚙️ Setup Dotnet
              uses: grovegs/actions/.github/actions/setup-dotnet@v0.1.2
              with:
                  global-json-file: ${{ inputs.global-json-file }}
                  cache: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' }}

            - name: 🏗️ Build .NET Project
              uses: grovegs/actions/.github/actions/build-dotnet@v0.1.2
              with:
                  project: ${{ matrix.project }}
                  configuration: Release
                  version: ${{ needs.shared.outputs.version }}

            - name: 📦 Generate Filename
              id: generate_filename
              run: |
                  base_filename="${{ needs.shared.outputs.filename }}"
                  path="${{ matrix.project }}"
                  item_name=$(basename "$path")

                  dot_count=$(echo "$item_name" | tr -cd '.' | wc -c)

                  if [ "$dot_count" -ge 2 ]; then
                      platform=$(echo "$item_name" | sed 's/.*\.//' | tr '[:upper:]' '[:lower:]')
                      filename="${base_filename}-${platform}"
                  else
                      filename="${base_filename}"
                  fi

                  echo "filename=$filename" >> $GITHUB_OUTPUT

            - name: 📦 Pack NuGet
              id: pack_nuget
              uses: grovegs/actions/.github/actions/pack-dotnet@v0.1.2
              with:
                  project: ${{ matrix.project }}
                  configuration: Release
                  version: ${{ needs.shared.outputs.version }}
                  filename: ${{ steps.generate_filename.outputs.filename }}

            - name: 📤 Upload Artifact
              uses: actions/upload-artifact@v4
              with:
                  name: ${{ steps.generate_filename.outputs.filename }}
                  path: ${{ steps.pack_nuget.outputs.file }}

    pack_godot_addons:
        if: fromJSON(inputs.godot-addons)[0] != null
        needs: shared
        runs-on: macos-latest
        strategy:
            matrix:
                addon: ${{ fromJSON(inputs.godot-addons) }}

        steps:
            - name: 📂 Checkout Code
              uses: actions/checkout@v5

            - name: 📦 Generate Filename
              id: generate_filename
              run: |
                  base_filename="${{ needs.shared.outputs.filename }}"
                  path="${{ matrix.addon }}"
                  item_name=$(basename "$path")

                  dot_count=$(echo "$item_name" | tr -cd '.' | wc -c)

                  if [ "$dot_count" -ge 2 ]; then
                      platform=$(echo "$item_name" | sed 's/.*\.//' | tr '[:upper:]' '[:lower:]')
                      filename="${base_filename}-${platform}"
                  else
                      filename="${base_filename}"
                  fi

                  echo "filename=$filename" >> $GITHUB_OUTPUT

            - name: 📦 Pack Godot Addon
              id: pack_addon
              uses: grovegs/actions/.github/actions/pack-godot-addon@v0.1.2
              with:
                  addon: ${{ matrix.addon }}
                  version: ${{ needs.shared.outputs.version }}
                  filename: ${{ steps.generate_filename.outputs.filename }}

            - name: 📤 Upload Artifact
              uses: actions/upload-artifact@v4
              with:
                  name: ${{ steps.generate_filename.outputs.filename }}
                  path: ${{ steps.pack_addon.outputs.file }}

            - name: 📤 Upload Modified Version Files
              uses: actions/upload-artifact@v4
              with:
                  name: version-files-godot-${{ matrix.addon }}
                  path: ${{ matrix.addon }}/

    pack_unity_packages:
        if: fromJSON(inputs.unity-packages)[0] != null
        needs: shared
        runs-on: ubuntu-latest
        strategy:
            matrix:
                package: ${{ fromJSON(inputs.unity-packages) }}

        steps:
            - name: 📂 Checkout Code
              uses: actions/checkout@v5

            - name: 📦 Generate Filename
              id: generate_filename
              run: |
                  base_filename="${{ needs.shared.outputs.filename }}"
                  path="${{ matrix.package }}"
                  item_name=$(basename "$path")

                  dot_count=$(echo "$item_name" | tr -cd '.' | wc -c)

                  if [ "$dot_count" -ge 2 ]; then
                      platform=$(echo "$item_name" | sed 's/.*\.//' | tr '[:upper:]' '[:lower:]')
                      filename="${base_filename}-${platform}"
                  else
                      filename="${base_filename}"
                  fi

                  echo "filename=$filename" >> $GITHUB_OUTPUT

            - name: 📦 Pack Unity Package
              id: pack_package
              uses: grovegs/actions/.github/actions/pack-unity-package@v0.1.2
              with:
                  package: ${{ matrix.package }}
                  version: ${{ needs.shared.outputs.version }}
                  filename: ${{ steps.generate_filename.outputs.filename }}

            - name: 📤 Upload Artifact
              uses: actions/upload-artifact@v4
              with:
                  name: ${{ steps.generate_filename.outputs.filename }}
                  path: ${{ steps.pack_package.outputs.file }}

            - name: 📤 Upload Modified Version Files
              uses: actions/upload-artifact@v4
              with:
                  name: version-files-unity-${{ matrix.package }}
                  path: ${{ matrix.package }}/

    release_nuget_packages:
        if: fromJSON(inputs.dotnet-projects)[0] != null && needs.pack_dotnet_projects.result == 'success'
        needs: [shared, pack_dotnet_projects]
        runs-on: ubuntu-latest
        strategy:
            matrix:
                project: ${{ fromJSON(inputs.dotnet-projects) }}

        steps:
            - name: 📦 Generate Filename
              id: generate_filename
              run: |
                  base_filename="${{ needs.shared.outputs.filename }}"
                  path="${{ matrix.project }}"
                  item_name=$(basename "$path")

                  dot_count=$(echo "$item_name" | tr -cd '.' | wc -c)

                  if [ "$dot_count" -ge 2 ]; then
                      platform=$(echo "$item_name" | sed 's/.*\.//' | tr '[:upper:]' '[:lower:]')
                      filename="${base_filename}-${platform}"
                  else
                      filename="${base_filename}"
                  fi

                  echo "filename=$filename" >> $GITHUB_OUTPUT

            - name: 📥 Download Artifact
              uses: actions/download-artifact@v5
              with:
                  name: ${{ steps.generate_filename.outputs.filename }}
                  path: ~/.artifacts

            - name: 🚀 Publish NuGet
              uses: grovegs/actions/.github/actions/publish-nuget@v0.1.2
              with:
                  file: ~/.artifacts/${{ steps.generate_filename.outputs.filename }}.nupkg
                  api-key: ${{ secrets.nuget-api-key }}

    release_github:
        if: always() && needs.shared.result == 'success' && (needs.pack_dotnet_projects.result == 'success' || needs.pack_godot_addons.result == 'success' || needs.pack_unity_packages.result == 'success')
        needs:
            [
                shared,
                pack_dotnet_projects,
                pack_godot_addons,
                pack_unity_packages,
            ]
        runs-on: ubuntu-latest

        steps:
            - name: 📂 Checkout Code
              uses: actions/checkout@v5

            - name: 📥 Download Version Files
              if: needs.pack_godot_addons.result == 'success' || needs.pack_unity_packages.result == 'success'
              uses: actions/download-artifact@v5
              with:
                  pattern: version-files-*
                  path: ~/.version-files

            - name: 📝 Apply Version Changes
              if: needs.pack_godot_addons.result == 'success' || needs.pack_unity_packages.result == 'success'
              run: |
                  if [ -d ~/.version-files ]; then
                      for version_dir in ~/.version-files/version-files-godot-*; do
                          if [ -d "$version_dir" ]; then
                              addon_path=$(basename "$version_dir" | sed 's/^version-files-godot-//')
                              echo "Applying version changes for Godot addon: $addon_path"
                              cp -r "$version_dir"/* "$addon_path"/
                          fi
                      done

                      for version_dir in ~/.version-files/version-files-unity-*; do
                          if [ -d "$version_dir" ]; then
                              package_path=$(basename "$version_dir" | sed 's/^version-files-unity-//')
                              echo "Applying version changes for Unity package: $package_path"
                              cp -r "$version_dir"/* "$package_path"/
                          fi
                      done
                  fi

            - name: 💾 Commit Version Changes
              if: needs.pack_godot_addons.result == 'success' || needs.pack_unity_packages.result == 'success'
              run: |
                  git config user.name "github-actions[bot]"
                  git config user.email "github-actions[bot]@users.noreply.github.com"
                  git checkout --detach HEAD
                  git add .
                  git diff --cached --quiet || git commit -m "chore: release version ${{ needs.shared.outputs.version }}"

            - name: 📥 Download All Artifacts
              uses: actions/download-artifact@v5
              with:
                  pattern: ${{ needs.shared.outputs.filename }}*
                  path: ~/.artifacts
                  merge-multiple: true

            - name: 🔍 Find Assets
              id: find_assets
              run: |
                  if [ -d ~/.artifacts ]; then
                    assets=$(find ~/.artifacts -type f \( -name "*.nupkg" -o -name "*.zip" \) 2>/dev/null | tr '\n' ' ' || echo "")
                  else
                    assets=""
                  fi
                  echo "assets=$assets" >> $GITHUB_OUTPUT
                  echo "Found assets: $assets"

            - name: 🚀 Publish to GitHub
              uses: grovegs/actions/.github/actions/publish-github@v0.1.2
              with:
                  title: ${{ inputs.name }} ${{ needs.shared.outputs.version }}
                  version: ${{ needs.shared.outputs.version }}
                  changelog: ${{ needs.shared.outputs.changelog-markdown }}
                  github-token: ${{ secrets.github-token }}
                  assets: ${{ steps.find_assets.outputs.assets }}

            - name: 📢 Notify Discord Success
              if: success()
              uses: grovegs/actions/.github/actions/notify-discord@v0.1.2
              with:
                  webhook_url: ${{ secrets.discord-webhook }}
                  title: "✅ ${{ github.event.repository.name }}"
                  description: |
                      ${{ needs.shared.outputs.changelog-markdown }}

                      [View Release](${{ github.server_url }}/${{ github.repository }}/releases/tag/v${{ needs.shared.outputs.version }})
                  color: "3066993"

            - name: 📢 Notify Discord Failure
              if: failure()
              uses: grovegs/actions/.github/actions/notify-discord@v0.1.2
              with:
                  webhook_url: ${{ secrets.discord-webhook }}
                  title: "❌ ${{ github.event.repository.name }}"
                  description: |
                      Release publication failed.

                      [View Workflow Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
                  color: "15158332"
