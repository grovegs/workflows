name: 🚀 Release Package

on:
  workflow_call:
    inputs:
      name:
        description: The name of package.
        required: true
        type: string
      version-type:
        description: Specifies the version type (e.g., major, minor, patch) for the build.
        required: true
        type: string
      global-json-file:
        description: The relative path to the `global.json` file to extract .NET version.
        required: true
        type: string
      dotnet-projects:
        description: Array of .NET project paths to build and package (e.g., ["src/Core", "src/Godot"])
        required: false
        type: string
        default: "[]"
      godot-addons:
        description: Array of Godot addon paths to package (e.g., ["addons/plugin1", "addons/plugin2"])
        required: false
        type: string
        default: "[]"

    secrets:
      github-token:
        description: The GitHub token for authentication.
        required: true
      nuget-api-key:
        description: NuGet API key used for authenticating and publishing the package.
        required: true

jobs:
  shared:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.bump_version.outputs.next-version }}
      changelog-plain: ${{ steps.generate_changelog.outputs.changelog-plain }}
      changelog-markdown: ${{ steps.generate_changelog.outputs.changelog-markdown }}
      filename: ${{ steps.generate_filename.outputs.filename }}

    steps:
      - name: 📂 Checkout Code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: 🆙 Bump Version
        id: bump_version
        uses: grovegs/actions/.github/actions/bump-version@v0.0.1
        with:
          version-type: ${{ inputs.version-type }}

      - name: 📝 Generate Changelog
        id: generate_changelog
        uses: grovegs/actions/.github/actions/generate-changelog@v0.0.1
        with:
          next-version: ${{ steps.bump_version.outputs.next-version }}

      - name: 📦 Generate Filename
        id: generate_filename
        run: |
          filename=$(echo "${{ inputs.name }}" | sed -E 's/([[:space:]]|_)/-/g; s/([a-z])([A-Z])/\1-\2/g' | tr '[:upper:]' '[:lower:]')-${{ steps.bump_version.outputs.next-version }}
          echo "filename=$filename" >> $GITHUB_OUTPUT

  pack_dotnet_projects:
    if: fromJSON(inputs.dotnet-projects)[0] != null
    needs: shared
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: ${{ fromJSON(inputs.dotnet-projects) }}

    steps:
      - name: 📂 Checkout Code
        uses: actions/checkout@v5

      - name: ⚙️ Setup Dotnet
        uses: grovegs/actions/.github/actions/setup-dotnet@v0.0.1
        with:
          global-json-file: ${{ inputs.global-json-file }}
          cache: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' }}

      - name: 🏗️ Build .NET Project
        uses: grovegs/actions/.github/actions/build-dotnet@v0.0.1
        with:
          project: ${{ matrix.project }}
          configuration: Release
          version: ${{ needs.shared.outputs.version }}

      - name: 📦 Generate Filename
        id: generate_filename
        run: |
          project_name=$(basename "${{ matrix.project }}")
          if [[ "$project_name" == *"Godot"* ]]; then
            filename=${{ needs.shared.outputs.filename }}-godot
          else
            filename=${{ needs.shared.outputs.filename }}
          fi
          echo "filename=$filename" >> $GITHUB_OUTPUT

      - name: 📦 Pack NuGet
        id: pack_nuget
        uses: grovegs/actions/.github/actions/pack-dotnet@v0.0.1
        with:
          project: ${{ matrix.project }}
          configuration: Release
          version: ${{ needs.shared.outputs.version }}
          filename: ${{ steps.generate_filename.outputs.filename }}

      - name: 📤 Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.generate_filename.outputs.filename }}
          path: ${{ steps.pack_nuget.outputs.file }}

  pack_godot_addons:
    if: fromJSON(inputs.godot-addons)[0] != null
    needs: shared
    runs-on: macos-latest
    strategy:
      matrix:
        addon: ${{ fromJSON(inputs.godot-addons) }}

    steps:
      - name: 📂 Checkout Code
        uses: actions/checkout@v5

      - name: 📦 Generate Filename
        id: generate_filename
        run: |
          addon_name=$(basename "${{ matrix.addon }}")
          filename=${{ needs.shared.outputs.filename }}-$addon_name
          echo "filename=$filename" >> $GITHUB_OUTPUT

      - name: 📦 Pack Godot Addon
        id: pack_addon
        uses: grovegs/actions/.github/actions/pack-godot-addon@v0.0.1
        with:
          addon: ${{ matrix.addon }}
          version: ${{ needs.shared.outputs.version }}
          filename: ${{ steps.generate_filename.outputs.filename }}

      - name: 📤 Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.generate_filename.outputs.filename }}
          path: ${{ steps.pack_addon.outputs.file }}

  release_nuget_packages:
    if: fromJSON(inputs.dotnet-projects)[0] != null && needs.pack_dotnet_projects.result == 'success'
    needs: [shared, pack_dotnet_projects]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: ${{ fromJSON(inputs.dotnet-projects) }}

    steps:
      - name: 📦 Generate Filename
        id: generate_filename
        run: |
          project_name=$(basename "${{ matrix.project }}")
          if [[ "$project_name" == *"Godot"* ]]; then
            filename=${{ needs.shared.outputs.filename }}-godot
          else
            filename=${{ needs.shared.outputs.filename }}
          fi
          echo "filename=$filename" >> $GITHUB_OUTPUT

      - name: 📥 Download Artifact
        uses: actions/download-artifact@v5
        with:
          name: ${{ steps.generate_filename.outputs.filename }}
          path: ~/.artifacts

      - name: 🚀 Publish NuGet
        uses: grovegs/actions/.github/actions/publish-nuget@v0.0.1
        with:
          file: ~/.artifacts/${{ steps.generate_filename.outputs.filename }}.nupkg
          api-key: ${{ secrets.nuget-api-key }}

  release_github:
    if: always() && needs.shared.result == 'success' && (needs.pack_dotnet_projects.result == 'success' || needs.pack_godot_addons.result == 'success')
    needs: [shared, pack_dotnet_projects, pack_godot_addons]
    runs-on: ubuntu-latest

    steps:
      - name: 📂 Checkout Code
        uses: actions/checkout@v5

      - name: 📥 Download All Artifacts
        uses: actions/download-artifact@v5
        with:
          path: ~/.artifacts

      - name: 🔍 Find Assets
        id: find_assets
        run: |
          assets=$(find ~/.artifacts -type f 2>/dev/null | tr '\n' ' ' || echo "")
          echo "assets=$assets" >> $GITHUB_OUTPUT
          echo "Found assets: $assets"

      - name: 🚀 Publish to GitHub
        uses: grovegs/actions/.github/actions/publish-github@v0.0.1
        with:
          title: ${{ inputs.name }} ${{ needs.shared.outputs.version }}
          version: ${{ needs.shared.outputs.version }}
          changelog: ${{ needs.shared.outputs.changelog-markdown }}
          github-token: ${{ secrets.github-token }}
          assets: ${{ steps.find_assets.outputs.assets }}