name: 🚀 Release Package

on:
    workflow_call:
        inputs:
            name:
                description: The name of package
                required: true
                type: string
            version-type:
                description: Specifies the version type such as major, minor, or patch for the build
                required: true
                type: string
            dotnet-projects:
                description: Array of .NET project paths to build and package such as ["src/Core", "src/Godot"]
                required: false
                type: string
                default: "[]"
            godot-addons:
                description: Array of Godot addon paths to package such as ["addons/plugin1", "addons/plugin2"]
                required: false
                type: string
                default: "[]"
            unity-packages:
                description: Array of Unity package paths to package such as ["Packages/com.example.package1", "Packages/com.example.package2"]
                required: false
                type: string
                default: "[]"
            global-json-file:
                description: The relative path to the global.json file to extract .NET version
                required: false
                type: string
                default: ""
            directory-build-props:
                description: The relative path to the Directory.Build.props file to set version
                required: false
                type: string
                default: ""
            publish-github:
                description: If true, publish release to GitHub
                required: false
                type: boolean
                default: true
            publish-nuget:
                description: If true, publish packages to NuGet
                required: false
                type: boolean
                default: true
            publish-discord:
                description: If true, send Discord notifications
                required: false
                type: boolean
                default: true

        secrets:
            github-token:
                description: The GitHub token for authentication
                required: true
            nuget-api-key:
                description: NuGet API key used for authenticating and publishing the package
                required: false
            discord-webhook:
                description: Discord webhook URL for sending notifications
                required: false

jobs:
    shared:
        name: Prepare Release
        runs-on: ubuntu-latest
        outputs:
            version: ${{ steps.bump-version.outputs.next-version }}
            changelog-plain: ${{ steps.generate-changelog.outputs.changelog-plain }}
            changelog-markdown: ${{ steps.generate-changelog.outputs.changelog-markdown }}
            filename: ${{ steps.generate-filename.outputs.filename }}

        steps:
            - name: 📂 Checkout Code
              uses: actions/checkout@v5
              with:
                  fetch-depth: 0

            - name: 🆙 Bump Version
              id: bump-version
              uses: grovegs/actions/.github/actions/bump-version@v1.0.1
              with:
                  version-type: ${{ inputs.version-type }}

            - name: 📝 Generate Changelog
              id: generate-changelog
              uses: grovegs/actions/.github/actions/generate-changelog@v1.0.1
              with:
                  next-version: ${{ steps.bump-version.outputs.next-version }}

            - name: 📦 Generate Filename
              id: generate-filename
              shell: bash
              run: |
                  #!/usr/bin/env bash
                  set -euo pipefail

                  filename=$(echo "${{ inputs.name }}" | sed -E 's/([[:space:]]|_)/-/g; s/([a-z])([A-Z])/\1-\2/g' | tr '[:upper:]' '[:lower:]')
                  filename="${filename}-${{ steps.bump-version.outputs.next-version }}"
                  echo "filename=${filename}" >> "${GITHUB_OUTPUT}"

    pack-dotnet-projects:
        name: Pack .NET Project
        if: fromJSON(inputs.dotnet-projects)[0] != null
        needs: shared
        runs-on: ubuntu-latest
        strategy:
            matrix:
                project: ${{ fromJSON(inputs.dotnet-projects) }}

        steps:
            - name: 📂 Checkout Code
              uses: actions/checkout@v5

            - name: 🔧 Setup .NET
              uses: grovegs/actions/.github/actions/setup-dotnet@v1.0.1
              with:
                  global-json-file: ${{ inputs.global-json-file }}
                  cache: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' }}

            - name: 🏗️ Build .NET Project
              uses: grovegs/actions/.github/actions/build-dotnet@v1.0.1
              with:
                  project: ${{ matrix.project }}
                  configuration: Release
                  version: ${{ needs.shared.outputs.version }}

            - name: 📦 Generate Filename
              id: generate-filename
              shell: bash
              run: |
                  #!/usr/bin/env bash
                  set -euo pipefail

                  base_filename="${{ needs.shared.outputs.filename }}"
                  path="${{ matrix.project }}"
                  item_name=$(basename "${path}")

                  sanitized_path=$(echo "${path}" | tr '/' '-' | tr '[:upper:]' '[:lower:]')
                  artifact_name="${base_filename}-${sanitized_path}"

                  dot_count=$(echo "${item_name}" | tr -cd '.' | wc -c)
                  if [ "${dot_count}" -ge 2 ]; then
                      platform=$(echo "${item_name}" | sed 's/.*\.//' | tr '[:upper:]' '[:lower:]')
                      package_name="${base_filename}-${platform}"
                  else
                      package_name="${base_filename}"
                  fi

                  echo "artifact_name=${artifact_name}" >> "${GITHUB_OUTPUT}"
                  echo "package_name=${package_name}" >> "${GITHUB_OUTPUT}"

            - name: 📦 Pack NuGet
              id: pack-nuget
              uses: grovegs/actions/.github/actions/pack-dotnet@v1.0.1
              with:
                  project: ${{ matrix.project }}
                  configuration: Release
                  version: ${{ needs.shared.outputs.version }}
                  name: ${{ steps.generate-filename.outputs.package_name }}
                  directory-build-props: ${{ inputs.directory-build-props }}

            - name: 📤 Upload Artifact
              uses: grovegs/actions/.github/actions/upload-artifact@v1.0.1
              with:
                  name: ${{ steps.generate-filename.outputs.artifact_name }}
                  path: ${{ steps.pack-nuget.outputs.package }}
                  retention-days: 7

            - name: 📤 Upload Modified Files
              if: steps.pack-nuget.outputs.modified-files != ''
              uses: grovegs/actions/.github/actions/upload-artifact@v1.0.1
              with:
                  name: modified-${{ steps.generate-filename.outputs.artifact_name }}
                  path: ${{ steps.pack-nuget.outputs.modified-files }}
                  retention-days: 1

    pack-godot-addons:
        name: Pack Godot Addon
        if: fromJSON(inputs.godot-addons)[0] != null
        needs: shared
        runs-on: macos-latest
        strategy:
            matrix:
                addon: ${{ fromJSON(inputs.godot-addons) }}

        steps:
            - name: 📂 Checkout Code
              uses: actions/checkout@v5

            - name: 📦 Generate Filename
              id: generate-filename
              shell: bash
              run: |
                  #!/usr/bin/env bash
                  set -euo pipefail

                  base_filename="${{ needs.shared.outputs.filename }}"
                  path="${{ matrix.addon }}"

                  sanitized_path=$(echo "${path}" | tr '/' '-' | tr '[:upper:]' '[:lower:]')
                  artifact_name="${base_filename}-${sanitized_path}"
                  package_name="${base_filename}-godot-addon"

                  echo "artifact_name=${artifact_name}" >> "${GITHUB_OUTPUT}"
                  echo "package_name=${package_name}" >> "${GITHUB_OUTPUT}"

            - name: 📦 Pack Godot Addon
              id: pack-addon
              uses: grovegs/actions/.github/actions/pack-godot-addon@v1.0.1
              with:
                  addon: ${{ matrix.addon }}
                  version: ${{ needs.shared.outputs.version }}
                  filename: ${{ steps.generate-filename.outputs.package_name }}

            - name: 📤 Upload Artifact
              uses: grovegs/actions/.github/actions/upload-artifact@v1.0.1
              with:
                  name: ${{ steps.generate-filename.outputs.artifact_name }}
                  path: ${{ steps.pack-addon.outputs.package }}
                  retention-days: 7

            - name: 📤 Upload Modified Files
              uses: grovegs/actions/.github/actions/upload-artifact@v1.0.1
              with:
                  name: modified-${{ steps.generate-filename.outputs.artifact_name }}
                  path: ${{ steps.pack-addon.outputs.modified-files }}
                  retention-days: 1

    pack-unity-packages:
        name: Pack Unity Package
        if: fromJSON(inputs.unity-packages)[0] != null
        needs: shared
        runs-on: ubuntu-latest
        strategy:
            matrix:
                package: ${{ fromJSON(inputs.unity-packages) }}

        steps:
            - name: 📂 Checkout Code
              uses: actions/checkout@v5

            - name: 📦 Generate Filename
              id: generate-filename
              shell: bash
              run: |
                  #!/usr/bin/env bash
                  set -euo pipefail

                  base_filename="${{ needs.shared.outputs.filename }}"
                  path="${{ matrix.package }}"

                  sanitized_path=$(echo "${path}" | tr '/' '-' | tr '[:upper:]' '[:lower:]')
                  artifact_name="${base_filename}-${sanitized_path}"
                  package_name="${base_filename}-unity-package"

                  echo "artifact_name=${artifact_name}" >> "${GITHUB_OUTPUT}"
                  echo "package_name=${package_name}" >> "${GITHUB_OUTPUT}"

            - name: 📦 Pack Unity Package
              id: pack-package
              uses: grovegs/actions/.github/actions/pack-unity-package@v1.0.1
              with:
                  package: ${{ matrix.package }}
                  version: ${{ needs.shared.outputs.version }}
                  filename: ${{ steps.generate-filename.outputs.package_name }}

            - name: 📤 Upload Artifact
              uses: grovegs/actions/.github/actions/upload-artifact@v1.0.1
              with:
                  name: ${{ steps.generate-filename.outputs.artifact_name }}
                  path: ${{ steps.pack-package.outputs.package }}
                  retention-days: 7

            - name: 📤 Upload Modified Files
              uses: grovegs/actions/.github/actions/upload-artifact@v1.0.1
              with:
                  name: modified-${{ steps.generate-filename.outputs.artifact_name }}
                  path: ${{ steps.pack-package.outputs.modified-files }}
                  retention-days: 1

    release-nuget-packages:
        name: Publish to NuGet
        if: fromJSON(inputs.dotnet-projects)[0] != null && needs.pack-dotnet-projects.result == 'success' && inputs.publish-nuget
        needs: [shared, pack-dotnet-projects]
        runs-on: ubuntu-latest
        strategy:
            matrix:
                project: ${{ fromJSON(inputs.dotnet-projects) }}

        steps:
            - name: 📦 Generate Filename
              id: generate-filename
              shell: bash
              run: |
                  #!/usr/bin/env bash
                  set -euo pipefail

                  base_filename="${{ needs.shared.outputs.filename }}"
                  path="${{ matrix.project }}"
                  item_name=$(basename "${path}")

                  sanitized_path=$(echo "${path}" | tr '/' '-' | tr '[:upper:]' '[:lower:]')
                  artifact_name="${base_filename}-${sanitized_path}"

                  dot_count=$(echo "${item_name}" | tr -cd '.' | wc -c)
                  if [ "${dot_count}" -ge 2 ]; then
                      platform=$(echo "${item_name}" | sed 's/.*\.//' | tr '[:upper:]' '[:lower:]')
                      package_name="${base_filename}-${platform}"
                  else
                      package_name="${base_filename}"
                  fi

                  echo "artifact_name=${artifact_name}" >> "${GITHUB_OUTPUT}"
                  echo "package_name=${package_name}" >> "${GITHUB_OUTPUT}"

            - name: 📥 Download Artifact
              uses: grovegs/actions/.github/actions/download-artifact@v1.0.1
              with:
                  name: ${{ steps.generate-filename.outputs.artifact_name }}
                  path: packages

            - name: 🚀 Publish NuGet
              uses: grovegs/actions/.github/actions/publish-nuget@v1.0.1
              with:
                  file: packages/${{ steps.generate-filename.outputs.package_name }}.nupkg
                  api-key: ${{ secrets.nuget-api-key }}

    release-github:
        name: Publish to GitHub
        if: always() && needs.shared.result == 'success' && (needs.pack-dotnet-projects.result == 'success' || needs.pack-godot-addons.result == 'success' || needs.pack-unity-packages.result == 'success')
        needs:
            [
                shared,
                pack-dotnet-projects,
                pack-godot-addons,
                pack-unity-packages,
            ]
        runs-on: ubuntu-latest

        steps:
            - name: 📂 Checkout Code
              uses: actions/checkout@v5

            - name: 📥 Download Modified Files
              uses: grovegs/actions/.github/actions/download-artifact@v1.0.1
              continue-on-error: true
              with:
                  pattern: modified-*

            - name: 💾 Commit and Push Version Changes
              if: inputs.publish-github
              id: commit-changes
              shell: bash
              run: |
                  #!/usr/bin/env bash
                  set -euo pipefail

                  git config user.name "github-actions[bot]"
                  git config user.email "github-actions[bot]@users.noreply.github.com"
                  git add .

                  if git diff --cached --quiet; then
                      echo "has_changes=false" >> "${GITHUB_OUTPUT}"
                  else
                      git commit -m "chore: release version ${{ needs.shared.outputs.version }} [skip ci]"
                      git push origin HEAD:"${{ github.ref_name }}"
                      echo "has_changes=true" >> "${GITHUB_OUTPUT}"
                  fi

            - name: 📥 Download All Artifacts
              if: inputs.publish-github
              uses: grovegs/actions/.github/actions/download-artifact@v1.0.1
              with:
                  pattern: ${{ needs.shared.outputs.filename }}*
                  path: packages

            - name: 🔍 Find Assets
              if: inputs.publish-github
              id: find-assets
              shell: bash
              run: |
                  #!/usr/bin/env bash
                  set -euo pipefail

                  if [ -d packages ]; then
                    shopt -s nullglob
                    assets=$(find packages -type f \( -name "*.nupkg" -o -name "*.zip" -o -name "*.tgz" \) 2>/dev/null | tr '\n' ' ' || echo "")
                    shopt -u nullglob
                  else
                    assets=""
                  fi
                  echo "assets=${assets}" >> "${GITHUB_OUTPUT}"
                  echo "Found assets: ${assets}"

            - name: 🚀 Publish to GitHub
              if: inputs.publish-github
              uses: grovegs/actions/.github/actions/publish-github@v1.0.1
              with:
                  title: ${{ inputs.name }} ${{ needs.shared.outputs.version }}
                  version: ${{ needs.shared.outputs.version }}
                  changelog: ${{ needs.shared.outputs.changelog-markdown }}
                  github-token: ${{ secrets.github-token }}
                  assets: ${{ steps.find-assets.outputs.assets }}

            - name: 📢 Notify Discord Success
              if: success() && inputs.publish-discord
              uses: grovegs/actions/.github/actions/notify-discord@v1.0.1
              with:
                  webhook-url: ${{ secrets.discord-webhook }}
                  title: ✅ ${{ github.event.repository.name }}
                  description: |
                      ${{ needs.shared.outputs.changelog-markdown }}

                      [View Release](${{ github.server_url }}/${{ github.repository }}/releases/tag/v${{ needs.shared.outputs.version }})
                  color: "3066993"

            - name: 📢 Notify Discord Failure
              if: failure() && inputs.publish-discord
              uses: grovegs/actions/.github/actions/notify-discord@v1.0.1
              with:
                  webhook-url: ${{ secrets.discord-webhook }}
                  title: ❌ ${{ github.event.repository.name }}
                  description: |
                      Release publication failed.

                      [View Workflow Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
                  color: "15158332"
