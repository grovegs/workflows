name: üöÄ Release Project

on:
    workflow_call:
        inputs:
            name:
                description: The name of project.
                required: true
                type: string
            version-type:
                description: Specifies the version type (e.g., major, minor, patch) for the build.
                required: true
                type: string
            environment:
                description: The build environment (e.g., Development, Production).
                required: true
                type: string
            godot-projects:
                description: Array of Godot project paths containing the project.godot file (e.g., ["projects/GameA", "projects/GameB"])
                required: false
                type: string
                default: "[]"
            unity-projects:
                description: Array of Unity project paths containing the ProjectSettings folder (e.g., ["projects/UnityGameA", "projects/UnityGameB"])
                required: false
                type: string
                default: "[]"
            global-json-file:
                description: The relative path to the `global.json` file to extract .NET and Godot version.
                required: false
                type: string
            tester-groups:
                description: Comma-separated list of tester groups to receive the build.
                required: false
                default: ""
                type: string
            release-android:
                description: "Flag to enable or disable the Android release job."
                required: false
                default: true
                type: boolean
            release-ios:
                description: "Flag to enable or disable the iOS release job."
                required: false
                default: true
                type: boolean
        secrets:
            github-token:
                description: The GitHub token for authentication.
                required: true
            unity-email:
                description: "The Unity account email address."
                required: false
            unity-password:
                description: "The Unity account password."
                required: false
            unity-license-key:
                description: "The Unity license serial key."
                required: false
            firebase-credentials:
                description: Firebase service account credentials for authentication with Firebase services.
                required: false
            firebase-app-id-android:
                description: Firebase Android app ID used to upload builds to Firebase App Distribution.
                required: false
            firebase-app-id-ios:
                description: Firebase iOS app ID used to upload builds to Firebase App Distribution.
                required: false
            android-keystore:
                description: Base64-encoded content of the Android keystore for signing the build.
                required: false
            android-keystore-user:
                description: Username for accessing the Android keystore.
                required: false
            android-keystore-password:
                description: Password for accessing the Android keystore.
                required: false
            ios-team-id:
                description: "The Apple Developer Team ID associated with your Apple Developer account."
                required: false
            ios-certificate:
                description: "The Base64-encoded iOS distribution certificate (.p12 file) used for signing the application."
                required: false
            ios-certificate-password:
                description: "The password used to import the password-protected iOS distribution certificate (.p12) for signing the application."
                required: false
            ios-provisioning-profile:
                description: "The Base64-encoded iOS provisioning profile (.mobileprovision file) required for building the application."
                required: false
            ios-provisioning-profile-uuid:
                description: "The UUID of the iOS provisioning profile to be used during the build process."
                required: false
            ios-api-key:
                description: "Base64-encoded App Store Connect API private key (.p8 file) for TestFlight uploads."
                required: false
            ios-api-key-id:
                description: "App Store Connect API Key ID for TestFlight uploads."
                required: false
            ios-api-issuer-id:
                description: "App Store Connect API Issuer ID for TestFlight uploads."
                required: false

jobs:
    shared:
        runs-on: ubuntu-latest
        outputs:
            version: ${{ steps.bump_version.outputs.next-version }}
            changelog-plain: ${{ steps.generate_changelog.outputs.changelog-plain }}
            changelog-markdown: ${{ steps.generate_changelog.outputs.changelog-markdown }}
            filename: ${{ steps.generate_filename.outputs.filename }}

        steps:
            - name: üîÑ Checkout Code
              uses: actions/checkout@v5
              with:
                  fetch-depth: 0

            - name: üîß Bump Version
              id: bump_version
              uses: grovegs/actions/.github/actions/bump-version@v0.1.2
              with:
                  version-type: ${{ inputs.version-type }}

            - name: üìù Generate Changelog
              id: generate_changelog
              uses: grovegs/actions/.github/actions/generate-changelog@v0.1.2
              with:
                  next-version: ${{ steps.bump_version.outputs.next-version }}

            - name: üì¶ Generate Filename
              id: generate_filename
              run: |
                  filename=$(echo "${{ inputs.name }}" | sed -E 's/([[:space:]]|_)/-/g; s/([a-z])([A-Z])/\1-\2/g' | tr '[:upper:]' '[:lower:]')
                  echo "filename=$filename" >> $GITHUB_OUTPUT

    release_godot_android:
        if: fromJSON(inputs.godot-projects)[0] != null && inputs.release-android
        needs: shared
        runs-on: macos-latest
        strategy:
            matrix:
                project: ${{ fromJSON(inputs.godot-projects) }}

        steps:
            - name: üì• Checkout Code
              uses: actions/checkout@v5

            - name: ‚òï Setup JDK
              uses: actions/setup-java@v5
              with:
                  java-version: "17"
                  distribution: "temurin"

            - name: üõ†Ô∏è Setup Android SDK
              uses: android-actions/setup-android@v3
              with:
                  packages: platform-tools build-tools;34.0.0 platforms;android-34 cmake;3.10.2.4988404 ndk;23.2.8568313

            - name: üõ†Ô∏è Setup Dotnet
              if: inputs.global-json-file != ''
              uses: grovegs/actions/.github/actions/setup-dotnet@v0.1.2
              with:
                  global-json-file: ${{ inputs.global-json-file }}
                  cache: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' }}

            - name: üéÆ Setup Godot
              uses: grovegs/actions/.github/actions/setup-godot@v0.1.2
              with:
                  global-json-file: ${{ inputs.global-json-file || '' }}
                  target-platforms: Android
                  cache: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' }}

            - name: üèóÔ∏è Build Dotnet
              if: inputs.global-json-file != ''
              uses: grovegs/actions/.github/actions/build-dotnet@v0.1.2
              with:
                  project: ${{ matrix.project }}
                  configuration: Debug

            - name: üì¶ Generate Project Filename
              id: generate_project_filename
              run: |
                  project_name=$(basename "${{ matrix.project }}")
                  filename=${{ needs.shared.outputs.filename }}-$(echo "$project_name" | sed -E 's/([[:space:]]|_)/-/g; s/([a-z])([A-Z])/\1-\2/g' | tr '[:upper:]' '[:lower:]')
                  echo "filename=$filename" >> $GITHUB_OUTPUT

            - name: üèóÔ∏è Build Godot
              id: build_godot
              uses: grovegs/actions/.github/actions/build-godot@v0.1.2
              with:
                  project: ${{ matrix.project }}
                  global-json-file: ${{ inputs.global-json-file || '' }}
                  version: ${{ needs.shared.outputs.version }}
                  platform: Android
                  preset: Android ${{ inputs.environment }}
                  configuration: Release
                  filename: ${{ steps.generate_project_filename.outputs.filename }}
                  define-symbols: ${{ inputs.environment == 'Development' && 'DEVELOPMENT' || '' }}
                  android-keystore: ${{ secrets.android-keystore }}
                  android-keystore-user: ${{ secrets.android-keystore-user }}
                  android-keystore-password: ${{ secrets.android-keystore-password }}
                  android-format: ${{ inputs.environment == 'Production' && 'aab' || inputs.environment == 'Development' && 'apk' || '' }}

            - name: üì§ Upload Build Artifact
              uses: actions/upload-artifact@v4
              if: steps.build_godot.outputs.file != ''
              with:
                  name: ${{ steps.generate_project_filename.outputs.filename }}-android
                  path: ${{ steps.build_godot.outputs.file }}
                  retention-days: 7

            - name: üì§ Publish to Firebase
              if: inputs.environment == 'Development'
              continue-on-error: true
              uses: grovegs/actions/.github/actions/publish-firebase@v0.1.2
              with:
                  file: ${{ steps.build_godot.outputs.file }}
                  app-id: ${{ secrets.firebase-app-id-android }}
                  credentials: ${{ secrets.firebase-credentials }}
                  release-notes: ${{ needs.shared.outputs.changelog-plain }}
                  tester-groups: ${{ inputs.tester-groups }}

    release_godot_ios:
        if: fromJSON(inputs.godot-projects)[0] != null && inputs.release-ios
        needs: shared
        runs-on: macos-latest
        strategy:
            matrix:
                project: ${{ fromJSON(inputs.godot-projects) }}

        steps:
            - name: üì• Checkout Code
              uses: actions/checkout@v5

            - name: üõ†Ô∏è Setup Dotnet
              if: inputs.global-json-file != ''
              uses: grovegs/actions/.github/actions/setup-dotnet@v0.1.2
              with:
                  global-json-file: ${{ inputs.global-json-file }}
                  cache: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' }}

            - name: üéÆ Setup Godot
              uses: grovegs/actions/.github/actions/setup-godot@v0.1.2
              with:
                  global-json-file: ${{ inputs.global-json-file || '' }}
                  target-platforms: iOS
                  cache: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' }}

            - name: üèóÔ∏è Build Dotnet
              if: inputs.global-json-file != ''
              uses: grovegs/actions/.github/actions/build-dotnet@v0.1.2
              with:
                  project: ${{ matrix.project }}
                  configuration: Debug

            - name: üì¶ Generate Project Filename
              id: generate_project_filename
              run: |
                  project_name=$(basename "${{ matrix.project }}")
                  filename=${{ needs.shared.outputs.filename }}-$(echo "$project_name" | sed -E 's/([[:space:]]|_)/-/g; s/([a-z])([A-Z])/\1-\2/g' | tr '[:upper:]' '[:lower:]')
                  echo "filename=$filename" >> $GITHUB_OUTPUT

            - name: üèóÔ∏è Build Project
              id: build_godot
              uses: grovegs/actions/.github/actions/build-godot@v0.1.2
              with:
                  project: ${{ matrix.project }}
                  global-json-file: ${{ inputs.global-json-file || '' }}
                  version: ${{ needs.shared.outputs.version }}
                  platform: iOS
                  preset: iOS ${{ inputs.environment }}
                  configuration: Release
                  filename: ${{ steps.generate_project_filename.outputs.filename }}
                  define-symbols: ${{ inputs.environment == 'Development' && 'DEVELOPMENT' || '' }}
                  ios-team-id: ${{ secrets.ios-team-id }}
                  ios-certificate: ${{ secrets.ios-certificate }}
                  ios-certificate-password: ${{ secrets.ios-certificate-password }}
                  ios-provisioning-profile: ${{ secrets.ios-provisioning-profile }}
                  ios-provisioning-profile-uuid: ${{ secrets.ios-provisioning-profile-uuid }}

            - name: üì§ Upload Build Artifact
              uses: actions/upload-artifact@v4
              if: steps.build_godot.outputs.file != ''
              with:
                  name: ${{ steps.generate_project_filename.outputs.filename }}-ios
                  path: ${{ steps.build_godot.outputs.file }}
                  retention-days: 7

            - name: üì§ Publish to Firebase
              if: inputs.environment == 'Development'
              continue-on-error: true
              uses: grovegs/actions/.github/actions/publish-firebase@v0.1.2
              with:
                  file: ${{ steps.build_godot.outputs.file }}
                  app-id: ${{ secrets.firebase-app-id-ios }}
                  credentials: ${{ secrets.firebase-credentials }}
                  release-notes: ${{ needs.shared.outputs.changelog-plain }}
                  tester-groups: ${{ inputs.tester-groups }}

    release_unity_android:
        if: fromJSON(inputs.unity-projects)[0] != null && inputs.release-android
        needs: shared
        runs-on: macos-latest
        strategy:
            matrix:
                project: ${{ fromJSON(inputs.unity-projects) }}

        steps:
            - name: üì• Checkout Code
              uses: actions/checkout@v5

            - name: ü§ñ Setup Android
              uses: grovegs/actions/.github/actions/setup-android@v0.1.2
              with:
                  java-version: "17"
                  java-distribution: "temurin"
                  android-packages: platform-tools build-tools;34.0.0 platforms;android-34 cmake;3.22.1 ndk;27.2.12479018

            - name: üéÆ Setup Unity
              uses: grovegs/actions/.github/actions/setup-unity@v0.1.2
              with:
                  project: ${{ matrix.project }}
                  unity-modules: android
                  cache: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' }}

            - name: üì¶ Generate Project Filename
              id: generate_project_filename
              run: |
                  project_name=$(basename "${{ matrix.project }}")
                  filename=${{ needs.shared.outputs.filename }}-$(echo "$project_name" | sed -E 's/([[:space:]]|_)/-/g; s/([a-z])([A-Z])/\1-\2/g' | tr '[:upper:]' '[:lower:]')
                  echo "filename=$filename" >> $GITHUB_OUTPUT

            - name: üèóÔ∏è Build Unity
              id: build_unity
              uses: grovegs/actions/.github/actions/build-unity@v0.1.2
              with:
                  project: ${{ matrix.project }}
                  version: ${{ needs.shared.outputs.version }}
                  platform: Android
                  configuration: Release
                  filename: ${{ steps.generate_project_filename.outputs.filename }}
                  profile-name: ${{ format('Android {0}', inputs.environment) }}
                  unity-email: ${{ secrets.unity-email }}
                  unity-password: ${{ secrets.unity-password }}
                  unity-license-key: ${{ secrets.unity-license-key }}
                  android-keystore: ${{ secrets.android-keystore }}
                  android-keystore-user: ${{ secrets.android-keystore-user }}
                  android-keystore-password: ${{ secrets.android-keystore-password }}
                  android-format: ${{ inputs.environment == 'Production' && 'aab' || inputs.environment == 'Development' && 'apk' || 'apk' }}
                  cache: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' }}

            - name: üì§ Upload Build Artifact
              uses: actions/upload-artifact@v4
              if: steps.build_unity.outputs.file != ''
              with:
                  name: ${{ steps.generate_project_filename.outputs.filename }}-android
                  path: ${{ steps.build_unity.outputs.file }}
                  retention-days: 7

            - name: üì§ Publish to Firebase
              if: inputs.environment == 'Development'
              continue-on-error: true
              uses: grovegs/actions/.github/actions/publish-firebase@v0.1.2
              with:
                  file: ${{ steps.build_unity.outputs.file }}
                  app-id: ${{ secrets.firebase-app-id-android }}
                  credentials: ${{ secrets.firebase-credentials }}
                  release-notes: ${{ needs.shared.outputs.changelog-plain }}
                  tester-groups: ${{ inputs.tester-groups }}

    release_unity_ios:
        if: fromJSON(inputs.unity-projects)[0] != null && inputs.release-ios
        needs: shared
        runs-on: macos-latest
        strategy:
            matrix:
                project: ${{ fromJSON(inputs.unity-projects) }}

        steps:
            - name: üì• Checkout Code
              uses: actions/checkout@v5

            - name: üçé Setup Xcode
              uses: grovegs/actions/.github/actions/setup-xcode@v0.1.2
              with:
                  xcode-version: "16.1"

            - name: üéÆ Setup Unity
              uses: grovegs/actions/.github/actions/setup-unity@v0.1.2
              with:
                  project: ${{ matrix.project }}
                  unity-modules: ios
                  cache: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' }}

            - name: üì¶ Generate Project Filename
              id: generate_project_filename
              run: |
                  project_name=$(basename "${{ matrix.project }}")
                  filename=${{ needs.shared.outputs.filename }}-$(echo "$project_name" | sed -E 's/([[:space:]]|_)/-/g; s/([a-z])([A-Z])/\1-\2/g' | tr '[:upper:]' '[:lower:]')
                  echo "filename=$filename" >> $GITHUB_OUTPUT

            - name: üèóÔ∏è Build Unity
              id: build_unity
              uses: grovegs/actions/.github/actions/build-unity@v0.1.2
              with:
                  project: ${{ matrix.project }}
                  version: ${{ needs.shared.outputs.version }}
                  platform: iOS
                  configuration: Release
                  filename: ${{ steps.generate_project_filename.outputs.filename }}
                  profile-name: ${{ format('iOS {0}', inputs.environment) }}
                  unity-email: ${{ secrets.unity-email }}
                  unity-password: ${{ secrets.unity-password }}
                  unity-license-key: ${{ secrets.unity-license-key }}
                  ios-team-id: ${{ secrets.ios-team-id }}
                  ios-certificate: ${{ secrets.ios-certificate }}
                  ios-certificate-password: ${{ secrets.ios-certificate-password }}
                  ios-provisioning-profile: ${{ secrets.ios-provisioning-profile }}
                  ios-provisioning-profile-uuid: ${{ secrets.ios-provisioning-profile-uuid }}
                  ios-export-method: ${{ inputs.environment == 'Production' && 'app-store' || inputs.environment == 'Development' && 'ad-hoc' || 'ad-hoc' }}
                  cache: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' }}

            - name: üì§ Upload Build Artifact
              uses: actions/upload-artifact@v4
              if: steps.build_unity.outputs.file != ''
              with:
                  name: ${{ steps.generate_project_filename.outputs.filename }}-ios
                  path: ${{ steps.build_unity.outputs.file }}
                  retention-days: 7

            - name: üì§ Publish to Firebase
              if: inputs.environment == 'Development'
              continue-on-error: true
              uses: grovegs/actions/.github/actions/publish-firebase@v0.1.2
              with:
                  file: ${{ steps.build_unity.outputs.file }}
                  app-id: ${{ secrets.firebase-app-id-ios }}
                  credentials: ${{ secrets.firebase-credentials }}
                  release-notes: ${{ needs.shared.outputs.changelog-plain }}
                  tester-groups: ${{ inputs.tester-groups }}

            - name: üì§ Publish to TestFlight
              if: inputs.environment == 'Production'
              continue-on-error: true
              uses: grovegs/actions/.github/actions/publish-testflight@v0.1.2
              with:
                  file: ${{ steps.build_unity.outputs.file }}
                  api-key: ${{ secrets.ios-api-key }}
                  api-key-id: ${{ secrets.ios-api-key-id }}
                  api-issuer-id: ${{ secrets.ios-api-issuer-id }}

    release_github:
        if: always() && needs.shared.result == 'success' && (needs.release_godot_android.result != 'failure' && needs.release_godot_ios.result != 'failure' && needs.release_unity_android.result != 'failure' && needs.release_unity_ios.result != 'failure') && (needs.release_godot_android.result == 'success' || needs.release_godot_ios.result == 'success' || needs.release_unity_android.result == 'success' || needs.release_unity_ios.result == 'success')
        needs:
            [
                shared,
                release_godot_android,
                release_godot_ios,
                release_unity_android,
                release_unity_ios,
            ]
        runs-on: ubuntu-latest

        steps:
            - name: üì• Checkout Code
              uses: actions/checkout@v5

            - name: üì• Download All Artifacts
              uses: actions/download-artifact@v5
              with:
                  path: ./builds/

            - name: üì¶ Collect Build Files
              id: collect_files
              run: |
                  files=()
                  if [ -d "./builds" ]; then
                    for dir in ./builds/*/; do
                      for file in "$dir"*; do
                        if [ -f "$file" ]; then
                          files+=("$file")
                        fi
                      done
                    done
                  fi

                  assets_string=""
                  for file in "${files[@]}"; do
                    assets_string="$assets_string $file"
                  done

                  echo "assets=$assets_string" >> $GITHUB_OUTPUT
                  echo "Found build files: $assets_string"

            - name: üõ†Ô∏è Publish to GitHub
              uses: grovegs/actions/.github/actions/publish-github@v0.1.2
              with:
                  title: ${{ inputs.name }} ${{ needs.shared.outputs.version }}
                  version: ${{ needs.shared.outputs.version }}
                  changelog: ${{ needs.shared.outputs.changelog-markdown }}
                  github-token: ${{ secrets.github-token }}
                  assets: ${{ steps.collect_files.outputs.assets }}
