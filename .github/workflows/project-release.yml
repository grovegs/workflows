name: 🚀 Release Project

on:
    workflow_call:
        inputs:
            name:
                description: The name of project
                required: true
                type: string
            version-type:
                description: Specifies the version type such as major, minor, or patch for the build
                required: true
                type: string
            global-json-file:
                description: The relative path to the global.json file to extract .NET and Godot version
                required: false
                type: string
                default: ""
            godot-project:
                description: Path to the Godot project containing the project.godot file
                required: false
                type: string
                default: ""
            godot-preset-name:
                description: The Godot export preset name to use for the build
                required: false
                type: string
                default: "Default"
            unity-project:
                description: Path to the Unity project containing the ProjectSettings folder
                required: false
                type: string
                default: ""
            unity-profile-name:
                description: The Unity build profile name to use for the build
                required: false
                type: string
                default: "Default"
            ios-export-method:
                description: The iOS export method (app-store, ad-hoc, development, enterprise)
                required: false
                type: string
                default: "ad-hoc"
            build-android:
                description: Flag to enable or disable the Android build
                required: false
                default: true
                type: boolean
            build-ios:
                description: Flag to enable or disable the iOS build
                required: false
                default: true
                type: boolean
            publish-github:
                description: If true, publish release to GitHub
                required: false
                type: boolean
                default: false
            publish-firebase:
                description: If true, publish builds to Firebase
                required: false
                type: boolean
                default: false
            tester-groups:
                description: Comma-separated list of tester groups to receive the build
                required: false
                default: ""
                type: string
            publish-testflight:
                description: If true, publish iOS builds to TestFlight
                required: false
                type: boolean
                default: false
            publish-discord:
                description: If true, send Discord notifications
                required: false
                type: boolean
                default: false
        secrets:
            github-token:
                description: The GitHub token for authentication
                required: true
            unity-email:
                description: The Unity account email address
                required: false
            unity-password:
                description: The Unity account password
                required: false
            unity-license-key:
                description: The Unity license serial key
                required: false
            android-keystore:
                description: Base64-encoded content of the Android keystore for signing the build
                required: false
            android-keystore-user:
                description: Username for accessing the Android keystore
                required: false
            android-keystore-password:
                description: Password for accessing the Android keystore
                required: false
            ios-team-id:
                description: The Apple Developer Team ID associated with your Apple Developer account
                required: false
            ios-certificate:
                description: The Base64-encoded iOS distribution certificate in p12 format used for signing the application
                required: false
            ios-certificate-password:
                description: The password used to import the password-protected iOS distribution certificate for signing the application
                required: false
            ios-provisioning-profile:
                description: The Base64-encoded iOS provisioning profile in mobileprovision format required for building the application
                required: false
            ios-provisioning-profile-uuid:
                description: The UUID of the iOS provisioning profile to be used during the build process
                required: false
            ios-api-key:
                description: Base64-encoded App Store Connect API private key from p8 file for TestFlight uploads
                required: false
            ios-api-key-id:
                description: App Store Connect API Key ID for TestFlight uploads
                required: false
            ios-api-issuer-id:
                description: App Store Connect API Issuer ID for TestFlight uploads
                required: false
            firebase-credentials:
                description: Firebase service account credentials for authentication with Firebase services
                required: false
            firebase-app-id-android:
                description: Firebase Android app ID used to upload builds to Firebase App Distribution
                required: false
            firebase-app-id-ios:
                description: Firebase iOS app ID used to upload builds to Firebase App Distribution
                required: false
            discord-webhook:
                description: Discord webhook URL for sending notifications
                required: false

jobs:
    prepare:
        name: Prepare Release
        runs-on: ubuntu-latest
        outputs:
            version: ${{ steps.bump-version.outputs.next-version }}
            changelog-plain: ${{ steps.generate-changelog.outputs.changelog-plain }}
            changelog-markdown: ${{ steps.generate-changelog.outputs.changelog-markdown }}
            filename: ${{ steps.generate-filename.outputs.filename }}

        steps:
            - name: 📂 Checkout Code
              uses: actions/checkout@v5
              with:
                  fetch-depth: 0

            - name: 🆙 Bump Version
              id: bump-version
              uses: grovegs/actions/.github/actions/bump-version@v1.0.1
              with:
                  version-type: ${{ inputs.version-type }}

            - name: 📝 Generate Changelog
              id: generate-changelog
              uses: grovegs/actions/.github/actions/generate-changelog@v1.0.1
              with:
                  next-version: ${{ steps.bump-version.outputs.next-version }}

            - name: 📦 Generate Filename
              id: generate-filename
              shell: bash
              run: |
                  #!/usr/bin/env bash
                  set -euo pipefail

                  filename=$(echo "${{ inputs.name }}" | sed -E 's/([[:space:]]|_)/-/g; s/([a-z])([A-Z])/\1-\2/g' | tr '[:upper:]' '[:lower:]')
                  filename="${filename}-${{ steps.bump-version.outputs.next-version }}"
                  echo "filename=${filename}" >> "${GITHUB_OUTPUT}"

    build-android:
        name: Build Android
        if: inputs.build-android && (inputs.godot-project != '' || inputs.unity-project != '')
        needs: prepare
        runs-on: macos-latest

        steps:
            - name: 📂 Checkout Code
              uses: actions/checkout@v5

            - name: 🔧 Setup .NET
              if: inputs.godot-project != ''
              uses: grovegs/actions/.github/actions/setup-dotnet@v1.0.1
              with:
                  global-json-file: ${{ inputs.global-json-file }}
                  cache: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' }}

            - name: 🎮 Setup Godot
              if: inputs.godot-project != ''
              uses: grovegs/actions/.github/actions/setup-godot@v1.0.1
              with:
                  global-json-file: ${{ inputs.global-json-file }}
                  target-platforms: Android
                  cache: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' }}

            - name: 🤖 Setup Android
              uses: grovegs/actions/.github/actions/setup-android@v1.0.1
              with:
                  java-version: 17
                  android-packages: ndk;27.2.12479018 platforms;android-35 build-tools;34.0.0

            - name: 🎮 Setup Unity
              if: inputs.unity-project != ''
              uses: grovegs/actions/.github/actions/setup-unity@v1.0.1
              with:
                  project: ${{ inputs.unity-project }}
                  unity-modules: android
                  cache: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' }}

            - name: 🏗️ Build Godot
              if: inputs.godot-project != ''
              id: build-godot
              uses: grovegs/actions/.github/actions/build-godot@v1.0.1
              with:
                  project: ${{ inputs.godot-project }}
                  global-json-file: ${{ inputs.global-json-file }}
                  version: ${{ needs.prepare.outputs.version }}
                  platform: Android
                  preset: ${{ inputs.godot-preset-name }}
                  configuration: Release
                  filename: ${{ needs.prepare.outputs.filename }}
                  android-keystore: ${{ secrets.android-keystore }}
                  android-keystore-user: ${{ secrets.android-keystore-user }}
                  android-keystore-password: ${{ secrets.android-keystore-password }}

            - name: 🏗️ Build Unity
              if: inputs.unity-project != ''
              id: build-unity
              uses: grovegs/actions/.github/actions/build-unity@v1.0.1
              with:
                  project: ${{ inputs.unity-project }}
                  version: ${{ needs.prepare.outputs.version }}
                  platform: Android
                  configuration: Release
                  filename: ${{ needs.prepare.outputs.filename }}
                  profile-name: ${{ inputs.unity-profile-name }}
                  unity-email: ${{ secrets.unity-email }}
                  unity-password: ${{ secrets.unity-password }}
                  unity-license-key: ${{ secrets.unity-license-key }}
                  android-keystore: ${{ secrets.android-keystore }}
                  android-keystore-user: ${{ secrets.android-keystore-user }}
                  android-keystore-password: ${{ secrets.android-keystore-password }}
                  cache: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' }}

            - name: 📤 Upload Build Artifact
              uses: grovegs/actions/.github/actions/upload-artifact@v1.0.1
              if: steps.build-godot.outputs.file != '' || steps.build-unity.outputs.file != ''
              with:
                  name: ${{ needs.prepare.outputs.filename }}-android
                  path: ${{ steps.build-godot.outputs.file || steps.build-unity.outputs.file }}
                  retention-days: 7

    build-ios:
        name: Build iOS
        if: inputs.build-ios && (inputs.godot-project != '' || inputs.unity-project != '')
        needs: prepare
        runs-on: macos-latest

        steps:
            - name: 📂 Checkout Code
              uses: actions/checkout@v5

            - name: 🔧 Setup .NET
              if: inputs.godot-project != ''
              uses: grovegs/actions/.github/actions/setup-dotnet@v1.0.1
              with:
                  global-json-file: ${{ inputs.global-json-file }}
                  cache: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' }}

            - name: 🎮 Setup Godot
              if: inputs.godot-project != ''
              uses: grovegs/actions/.github/actions/setup-godot@v1.0.1
              with:
                  global-json-file: ${{ inputs.global-json-file }}
                  target-platforms: iOS
                  cache: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' }}

            - name: 🍎 Setup Xcode
              uses: grovegs/actions/.github/actions/setup-xcode@v1.0.1
              with:
                  xcode-version: "16.0"

            - name: 🎮 Setup Unity
              if: inputs.unity-project != ''
              uses: grovegs/actions/.github/actions/setup-unity@v1.0.1
              with:
                  project: ${{ inputs.unity-project }}
                  unity-modules: ios
                  cache: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' }}

            - name: 🏗️ Build Godot
              if: inputs.godot-project != ''
              id: build-godot
              uses: grovegs/actions/.github/actions/build-godot@v1.0.1
              with:
                  project: ${{ inputs.godot-project }}
                  global-json-file: ${{ inputs.global-json-file }}
                  version: ${{ needs.prepare.outputs.version }}
                  platform: iOS
                  preset: ${{ inputs.godot-preset-name }}
                  configuration: Release
                  filename: ${{ needs.prepare.outputs.filename }}
                  ios-team-id: ${{ secrets.ios-team-id }}
                  ios-certificate: ${{ secrets.ios-certificate }}
                  ios-certificate-password: ${{ secrets.ios-certificate-password }}
                  ios-provisioning-profile: ${{ secrets.ios-provisioning-profile }}
                  ios-provisioning-profile-uuid: ${{ secrets.ios-provisioning-profile-uuid }}

            - name: 🏗️ Build Unity
              if: inputs.unity-project != ''
              id: build-unity
              uses: grovegs/actions/.github/actions/build-unity@v1.0.1
              with:
                  project: ${{ inputs.unity-project }}
                  version: ${{ needs.prepare.outputs.version }}
                  platform: iOS
                  configuration: Release
                  filename: ${{ needs.prepare.outputs.filename }}
                  profile-name: ${{ inputs.unity-profile-name }}
                  unity-email: ${{ secrets.unity-email }}
                  unity-password: ${{ secrets.unity-password }}
                  unity-license-key: ${{ secrets.unity-license-key }}
                  ios-team-id: ${{ secrets.ios-team-id }}
                  ios-certificate: ${{ secrets.ios-certificate }}
                  ios-certificate-password: ${{ secrets.ios-certificate-password }}
                  ios-provisioning-profile: ${{ secrets.ios-provisioning-profile }}
                  ios-provisioning-profile-uuid: ${{ secrets.ios-provisioning-profile-uuid }}
                  ios-export-method: ${{ inputs.ios-export-method }}
                  cache: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' }}

            - name: 📤 Upload Build Artifact
              uses: grovegs/actions/.github/actions/upload-artifact@v1.0.1
              if: steps.build-godot.outputs.file != '' || steps.build-unity.outputs.file != ''
              with:
                  name: ${{ needs.prepare.outputs.filename }}-ios
                  path: ${{ steps.build-godot.outputs.file || steps.build-unity.outputs.file }}
                  retention-days: 7

    release:
        name: Release Platforms
        if: always() && needs.prepare.result == 'success' && (needs.build-android.result == 'success' || needs.build-ios.result == 'success')
        needs: [prepare, build-android, build-ios]
        runs-on: ubuntu-latest

        steps:
            - name: 📂 Checkout Code
              uses: actions/checkout@v5

            - name: 📥 Download Android Artifact
              if: needs.build-android.result == 'success'
              continue-on-error: true
              uses: grovegs/actions/.github/actions/download-artifact@v1.0.1
              with:
                  name: ${{ needs.prepare.outputs.filename }}-android
                  path: builds/android

            - name: 📥 Download iOS Artifact
              if: needs.build-ios.result == 'success'
              continue-on-error: true
              uses: grovegs/actions/.github/actions/download-artifact@v1.0.1
              with:
                  name: ${{ needs.prepare.outputs.filename }}-ios
                  path: builds/ios

            - name: 🔍 Find Build Files
              id: find-build-files
              shell: bash
              run: |
                  #!/usr/bin/env bash
                  set -euo pipefail

                  all_files=""
                  android_file=""
                  ios_file=""

                  if [ -d builds/android ]; then
                    android_file=$(find builds/android -type f \( -name "*.apk" -o -name "*.aab" \) 2>/dev/null | head -n 1 || echo "")
                    [ -n "${android_file}" ] && all_files="${android_file}"
                  fi

                  if [ -d builds/ios ]; then
                    ios_file=$(find builds/ios -type f -name "*.ipa" 2>/dev/null | head -n 1 || echo "")
                    [ -n "${ios_file}" ] && all_files="${all_files} ${ios_file}"
                  fi

                  all_files=$(echo "${all_files}" | xargs)

                  echo "all-files=${all_files}" >> "${GITHUB_OUTPUT}"
                  echo "android-file=${android_file}" >> "${GITHUB_OUTPUT}"
                  echo "ios-file=${ios_file}" >> "${GITHUB_OUTPUT}"

                  echo "Found all files: ${all_files}"
                  echo "Found Android file: ${android_file}"
                  echo "Found iOS file: ${ios_file}"

            - name: 🏷️ Create and Push Tag
              shell: bash
              run: |
                  #!/usr/bin/env bash
                  set -euo pipefail

                  git config user.name "github-actions[bot]"
                  git config user.email "github-actions[bot]@users.noreply.github.com"

                  tag="v${{ needs.prepare.outputs.version }}"

                  if git rev-parse "${tag}" >/dev/null 2>&1; then
                      echo "Tag ${tag} already exists, skipping creation"
                  else
                      git tag -a "${tag}" -m "Release ${tag}"
                      git push origin "${tag}"
                      echo "Created and pushed tag ${tag}"
                  fi

            - name: 🚀 Publish to GitHub
              if: inputs.publish-github && steps.find-build-files.outputs.all-files != ''
              uses: grovegs/actions/.github/actions/publish-github@v1.0.1
              with:
                  title: ${{ inputs.name }} ${{ needs.prepare.outputs.version }}
                  version: ${{ needs.prepare.outputs.version }}
                  changelog: ${{ needs.prepare.outputs.changelog-markdown }}
                  github-token: ${{ secrets.github-token }}
                  assets: ${{ steps.find-build-files.outputs.all-files }}

            - name: 📤 Publish Android to Firebase
              if: inputs.publish-firebase && steps.find-build-files.outputs.android-file != ''
              continue-on-error: true
              uses: grovegs/actions/.github/actions/publish-firebase@v1.0.1
              with:
                  file: ${{ steps.find-build-files.outputs.android-file }}
                  app-id: ${{ secrets.firebase-app-id-android }}
                  credentials: ${{ secrets.firebase-credentials }}
                  release-notes: ${{ needs.prepare.outputs.changelog-plain }}
                  tester-groups: ${{ inputs.tester-groups }}

            - name: 📤 Publish iOS to Firebase
              if: inputs.publish-firebase && steps.find-build-files.outputs.ios-file != ''
              continue-on-error: true
              uses: grovegs/actions/.github/actions/publish-firebase@v1.0.1
              with:
                  file: ${{ steps.find-build-files.outputs.ios-file }}
                  app-id: ${{ secrets.firebase-app-id-ios }}
                  credentials: ${{ secrets.firebase-credentials }}
                  release-notes: ${{ needs.prepare.outputs.changelog-plain }}
                  tester-groups: ${{ inputs.tester-groups }}

            - name: 📤 Publish to TestFlight
              if: inputs.publish-testflight && steps.find-build-files.outputs.ios-file != ''
              continue-on-error: true
              uses: grovegs/actions/.github/actions/publish-testflight@v1.0.1
              with:
                  file: ${{ steps.find-build-files.outputs.ios-file }}
                  api-key: ${{ secrets.ios-api-key }}
                  api-key-id: ${{ secrets.ios-api-key-id }}
                  api-issuer-id: ${{ secrets.ios-api-issuer-id }}

            - name: 📢 Notify Discord Success
              if: success() && inputs.publish-discord
              uses: grovegs/actions/.github/actions/notify-discord@v1.0.1
              with:
                  webhook-url: ${{ secrets.discord-webhook }}
                  title: ✅ ${{ github.event.repository.name }}
                  description: |
                      ${{ needs.prepare.outputs.changelog-markdown }}

                      [View Release](${{ github.server_url }}/${{ github.repository }}/releases/tag/v${{ needs.prepare.outputs.version }})
                  color: "3066993"

            - name: 📢 Notify Discord Failure
              if: failure() && inputs.publish-discord
              uses: grovegs/actions/.github/actions/notify-discord@v1.0.1
              with:
                  webhook-url: ${{ secrets.discord-webhook }}
                  title: ❌ ${{ github.event.repository.name }}
                  description: |
                      Release publication failed.

                      [View Workflow Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
                  color: "15158332"
