name: üîç Format Project

on:
    workflow_call:
        inputs:
            godot-projects:
                description: Array of Godot project paths containing the .csproj file (e.g., ["projects/GameA", "projects/GameB"])
                required: false
                type: string
                default: "[]"
            godot-tests:
                description: Array of Godot test project paths containing the .csproj file (e.g., ["tests/GameA.Tests", "tests/GameB.Tests"])
                required: false
                type: string
                default: "[]"
            unity-projects:
                description: Array of Unity project paths containing the ProjectSettings folder (e.g., ["projects/UnityGameA", "projects/UnityGameB"])
                required: false
                type: string
                default: "[]"
            global-json-file:
                description: The relative path to the `global.json` file to extract .NET version.
                required: true
                type: string

jobs:
    format_godot_projects:
        if: fromJSON(inputs.godot-projects)[0] != null
        runs-on: ubuntu-latest
        strategy:
            matrix:
                project: ${{ fromJSON(inputs.godot-projects) }}

        steps:
            - name: üìÇ Checkout Code
              uses: actions/checkout@v5

            - name: ‚öôÔ∏è Setup Dotnet
              uses: grovegs/actions/.github/actions/setup-dotnet@v0.0.1
              with:
                  global-json-file: ${{ inputs.global-json-file }}
                  cache: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' }}

            - name: üîç Format .NET Project
              uses: grovegs/actions/.github/actions/format-dotnet@v0.0.1
              with:
                  project: ${{ matrix.project }}

    format_godot_tests:
        if: fromJSON(inputs.godot-tests)[0] != null
        runs-on: ubuntu-latest
        strategy:
            matrix:
                project: ${{ fromJSON(inputs.godot-tests) }}

        steps:
            - name: üìÇ Checkout Code
              uses: actions/checkout@v5

            - name: ‚öôÔ∏è Setup Dotnet
              uses: grovegs/actions/.github/actions/setup-dotnet@v0.0.1
              with:
                  global-json-file: ${{ inputs.global-json-file }}
                  cache: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' }}

            - name: üîç Format .NET Test Project
              uses: grovegs/actions/.github/actions/format-dotnet@v0.0.1
              with:
                  project: ${{ matrix.project }}

    format_unity_projects:
        if: fromJSON(inputs.unity-projects)[0] != null
        runs-on: ubuntu-latest
        strategy:
            matrix:
                project: ${{ fromJSON(inputs.unity-projects) }}

        steps:
            - name: üìÇ Checkout Code
              uses: actions/checkout@v5

            - name: üîç Format Unity Project
              uses: grovegs/actions/.github/actions/format-unity@v0.0.1
              with:
                  project: ${{ matrix.project }}