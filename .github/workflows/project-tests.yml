name: ðŸ§ª Test Project

on:
    workflow_call:
        inputs:
            dotnet-projects:
                description: Array of .NET test project paths containing the .csproj file such as ["tests/GameA.Tests", "tests/GameB.Tests"]
                required: false
                type: string
                default: "[]"
            godot-projects:
                description: Array of Godot project paths containing the project.godot file such as ["projects/GameA", "projects/GameB"]
                required: false
                type: string
                default: "[]"
            unity-projects:
                description: Array of Unity project paths containing the ProjectSettings folder such as ["projects/UnityGameA", "projects/UnityGameB"]
                required: false
                type: string
                default: "[]"
            global-json-file:
                description: The relative path to the global.json file to extract .NET and Godot version
                required: false
                type: string
                default: ""

jobs:
    test-dotnet-projects:
        name: Test .NET Project
        if: fromJSON(inputs.dotnet-projects)[0] != null
        runs-on: ubuntu-latest
        strategy:
            matrix:
                project: ${{ fromJSON(inputs.dotnet-projects) }}

        steps:
            - name: ðŸ“‚ Checkout Code
              uses: actions/checkout@v5

            - name: ðŸ”§ Setup .NET
              uses: grovegs/actions/.github/actions/setup-dotnet@v1.0.2
              with:
                  global-json-file: ${{ inputs.global-json-file }}
                  cache: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' }}

            - name: ðŸ§ª Test .NET Project
              uses: grovegs/actions/.github/actions/test-dotnet@v1.0.2
              with:
                  project: ${{ matrix.project }}
                  configuration: Release

    test-godot-projects:
        name: Test Godot Project
        if: fromJSON(inputs.godot-projects)[0] != null
        runs-on: ubuntu-latest
        strategy:
            matrix:
                project: ${{ fromJSON(inputs.godot-projects) }}

        steps:
            - name: ðŸ“‚ Checkout Code
              uses: actions/checkout@v5

            - name: ðŸ”§ Setup .NET
              uses: grovegs/actions/.github/actions/setup-dotnet@v1.0.2
              with:
                  global-json-file: ${{ inputs.global-json-file }}
                  cache: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' }}

            - name: ðŸŽ® Setup Godot
              uses: grovegs/actions/.github/actions/setup-godot@v1.0.2
              with:
                  global-json-file: ${{ inputs.global-json-file }}
                  cache: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' }}

            - name: ðŸ§ª Test Godot Project
              uses: grovegs/actions/.github/actions/test-godot@v1.0.2
              with:
                  project: ${{ matrix.project }}
                  global-json-file: ${{ inputs.global-json-file }}

    test-unity-projects:
        name: Test Unity Project
        if: fromJSON(inputs.unity-projects)[0] != null
        runs-on: macos-latest
        strategy:
            matrix:
                project: ${{ fromJSON(inputs.unity-projects) }}

        steps:
            - name: ðŸ“‚ Checkout Code
              uses: actions/checkout@v5

            - name: ðŸŽ® Setup Unity
              uses: grovegs/actions/.github/actions/setup-unity@v1.0.2
              with:
                  project: ${{ matrix.project }}
                  cache: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' }}

            - name: ðŸ§ª Test Unity Project
              uses: grovegs/actions/.github/actions/test-unity@v1.0.2
              with:
                  project: ${{ matrix.project }}
